/*
 * x86-64 JIT entry trampoline.
 *
 * Copyright (c) 2019 Zeling Feng
 *
 * MIT License
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

#if defined(__APPLE__)
/* Good job, Apple! */
#define SYM(x) _##x
#else
#define SYM(x) x
#endif

.global SYM(jit_entry)
SYM(jit_entry):
    pushq %rbx
    pushq %r14
    pushq %r15
    movq %rdi, %rbx
    movq SYM(getchar)@GOTPCREL(%rip), %r14
    movq SYM(putchar)@GOTPCREL(%rip), %r15
    call L1
    movq %rbx, %rax
    popq %r15
    popq %r14
    popq %rbx
    ret
L1:
    pushq %rsi
    ret
